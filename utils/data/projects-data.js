export const projectsData = [
    {
        id: 1,
        name: 'BeBe Mobile Application',
        description: "A donation platform empowering people to seek help or support others. Developed a feature-rich mobile application with functionalities including Story, Post, Donation, Referral System, and more. Designed a user-friendly interface to enhance engagement and simplify the donation process. Integrated real-time features and ensured smooth performance for seamless user experience.",
        tools: ['Flutter', 'BLoC', 'Clean Architecture', 'Firebase'],
        role: 'Flutter Developer',
        code: '',
        demo: '',
    },
    {
        id: 2,
        name: 'Al-Jazeera Mobile App',
        description: "An all-in-one mobile app for employees and agents with tailored permissions. Built a comprehensive HR system and ticketing platform to streamline operations for employees. Developed features for agents, including Wallet Management, Voucher Purchase, and User Activation tools. Implemented robust role-based access control to manage permissions effectively for different user types.",
        tools: ['Flutter', 'BLoC', 'Clean Architecture', 'Firebase', 'RESTful API'],
        role: 'Flutter Developer',
        code: '',
        demo: '',
    },
    {
        id: 11,
        name: 'Music App Maintenance',
        description: "Updated and maintained a legacy music application, implementing new features and improving performance. Refactored outdated codebase using modern development practices, fixed critical bugs, and enhanced UI/UX. Migrated the app to newer frameworks while preserving functionality. Implemented streaming optimization and added offline playback capabilities.",
        tools: ['Flutter', 'Dart', 'BLoC', 'Firebase', 'REST API', 'SQLite', 'Media Player'],
        role: 'Flutter Developer',
        code: '',
        demo: '',
    },
    {
        id: 3,
        name: 'Sign Language Translator',
        description: "A mobile app that translates ASL (American Sign Language) into text using AI and a mobile camera. Leveraged AI models for real-time translation of sign language to text, enhancing accessibility for individuals with hearing impairments.",
        tools: ['Mobile Development', 'AI', 'Machine Learning', 'Computer Vision'],
        role: 'Developer',
        code: '',
        demo: '',
    },
    {
        id: 4,
        name: 'Car Type and Model Classification',
        description: "AI-powered software for identifying car types and models from images or videos. Built a robust system using machine learning to classify car types and models, enabling practical applications in transportation and surveillance systems.",
        tools: ['Python', 'TensorFlow', 'Machine Learning', 'Computer Vision'],
        role: 'Machine Learning Engineer',
        code: '',
        demo: '',
    },
    {
        id: 5,
        name: 'Smart Car Parking System',
        description: "Organized car parking solution using Raspberry Pi. Designed a subscription-based smart parking system to streamline parking operations and optimize space utilization.",
        tools: ['Raspberry Pi', 'Python', 'IoT'],
        role: 'Developer',
        code: '',
        demo: '',
    },
    {
        id: 6,
        name: 'Advertisements Dashboard Based on Face Recognition',
        description: "AI-driven software that displays targeted ads based on facial recognition. Developed a face recognition system to deliver personalized advertisements by identifying user demographics.",
        tools: ['Python', 'Face Recognition', 'AI', 'Computer Vision'],
        role: 'Developer',
        code: '',
        demo: '',
    },
    {
        id: 7,
        name: 'Auto-Enter Zoom Meetings',
        description: "Automated Zoom meeting entry using Python and calendar integration. Created a Python-based tool to open Zoom links automatically, synchronized with the user's calendar schedule.",
        tools: ['Python', 'Calendar API', 'Automation'],
        role: 'Developer',
        code: '',
        demo: '',
    },
    {
        id: 8,
        name: 'Text-To-Image Telegram Bot',
        description: "Telegram bot that generates images from text using AI. Developed a bot that translates textual input into AI-generated images, leveraging advanced text-to-image generation models.",
        tools: ['Python', 'Telegram API', 'AI', 'Text-to-Image Models'],
        role: 'Developer',
        code: '',
        demo: '',
    },
    {
        id: 9,
        name: 'Transport Telegram Bot',
        description: "Travel guide for navigating public transportation in Baghdad. Built a Telegram bot providing detailed route guidance for public transport systems in Baghdad, enhancing user convenience.",
        tools: ['Python', 'Telegram API', 'Navigation'],
        role: 'Developer',
        code: '',
        demo: '',
    },
    {
        id: 10,
        name: 'Deni Sour Game',
        description: "A clone of the Chrome Dinosaur Game using Pygame. Developed a simple yet engaging endless runner game, implementing obstacle generation and player controls with Pygame.",
        tools: ['Python', 'Pygame', 'Game Development'],
        role: 'Game Developer',
        code: '',
        demo: '',
    },

];